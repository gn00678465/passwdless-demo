version: '3.3'

services:
  traefik:
    image: traefik:v2.7
    container_name: traefik
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--api.dashboard=true"
      - "--api.insecure=true"
    ports:
      - "80:80"
      - "8081:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    # networks:
    #   - frontend
  spa-to-http:
    container_name: frontend
    build:
      context: "client" # name of the folder where Dockerfile is located
      dockerfile: Dockerfile
    depends_on:
      - api-service
    links:
      - api-service
    environment:
      - PORT=8080
      - SPA_MODE=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.spa-to-http.rule=Host(`serve-spa.localhost`)"
      - "traefik.http.routers.spa-to-http.entrypoints=web"
      - "traefik.http.services.spa-to-http.loadbalancer.server.port=8080" # port inside of frontend which should be used
    # networks:
    #   - frontend
    #   - backend
  api-service:
    container_name: backend
    build:
      context: "server"
      dockerfile: Dockerfile
    volumes:
      - ./db:/app/db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-service.rule=Host(`serve-spa.localhost`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api-service.entrypoints=web"
    environment:
        - RP_ID=serve-spa.localhost
        - RP_NAME=serve-spa.localhost
        - ORIGIN_WEBSITE=http://serve-spa.localhost
    # networks:
    #   - backend


# networks:
#   frontend:
#     # Use a custom driver
#     driver: bridge
#     name: frontend-network
#   backend:
#     # Use a custom driver which takes special options
#     # driver: custom-driver-2
#     name: backend-network
